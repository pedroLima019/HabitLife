// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  name             String
  email            String            @unique
  password         String
  profile_picture  String?           @db.VarChar(255)
  created_at       DateTime          @default(now())
  updated_at       DateTime          @updatedAt
  habits           Habit[]
  habitCompletions HabitCompletion[]
  reminders        Reminder[]
  weeklyReports    WeeklyReport[]
  userXp           UserXp[]
}

model Habit {
  id               Int               @id @default(autoincrement())
  user_id          Int
  name             String
  description      String?
  periodicity      Periodicity
  recommended_time DateTime
  category         String
  created_at       DateTime          @default(now())
  updated_at       DateTime          @updatedAt
  user             User              @relation(fields: [user_id], references: [id])
  habitCompletions HabitCompletion[]
  reminders        Reminder[]
}

model HabitCompletion {
  id           Int      @id @default(autoincrement())
  habit_id     Int
  user_id      Int
  completed_at DateTime @default(now())
  created_at   DateTime @default(now())
  habit        Habit    @relation(fields: [habit_id], references: [id])
  user         User     @relation(fields: [user_id], references: [id])
}

model Reminder {
  id            Int          @id @default(autoincrement())
  habit_id      Int
  user_id       Int
  reminder_time DateTime
  reminder_type ReminderType
  created_at    DateTime     @default(now())
  habit         Habit        @relation(fields: [habit_id], references: [id])
  user          User         @relation(fields: [user_id], references: [id])
}

model WeeklyReport {
  id                    Int      @id @default(autoincrement())
  user_id               Int
  report_date           DateTime @default(now())
  habits_completed      Int
  total_habits          Int
  completion_percentage Float
  created_at            DateTime @default(now())
  user                  User     @relation(fields: [user_id], references: [id])
}

model UserXp {
  id         Int      @id @default(autoincrement())
  user_id    Int
  xp_points  Int      @default(0)
  level      Level    @default(BEGINNER)
  badges     String[] @default([])
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [id])
}

enum Periodicity {
  DAILY
  WEEKLY
  MONTHLY
}

enum ReminderType {
  EMAIL
  NOTIFICATION
}

enum Level {
  BEGINNER
  INTERMEDIATE
  EXPERT
}
